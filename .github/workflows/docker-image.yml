name: Publish Docker image

on:
  push:
    branches:
    - main
    - release/*    

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}
  MAVEN_BINARY_URL: https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
  
jobs:

  push_to_registry:
    name: Push Docker image to Docker Hub
    
    strategy:
      matrix:
        quarkus-mandrel_image: [quay.io/quarkus/ubi-quarkus-mandrel]
        quarkus-mandrel_version: [22.1, 22.2]
        quarkus-mandrel_java_version: [11, 17]
        
    runs-on: ubuntu-latest
    
    env:
      MANDREL_IMAGE_TAGS: ${{ matrix.quarkus-mandrel_version }}-java${{ matrix.quarkus-mandrel_java_version }}
      MANDREL_FULL_IMAGE: ${{ matrix.quarkus-mandrel_image }}:${{ env.MANDREL_IMAGE_TAGS }}
    
    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
        
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
            
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
          
    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MANDREL_IMAGE_TAGS }}
        build-args: |
          MANDREL_IMAGE=${{ env.MANDREL_FULL_IMAGE }}
          MAVEN_BINARY_URL=${{ env.MAVEN_BINARY_URL }}
          
    - name: Image digest
      run: |
        echo "Image digest:  ${{ steps.docker_build.outputs.digest }}"          
